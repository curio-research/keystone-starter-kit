// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.9.2
// source: round.proto

package pb_round

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb_base "github.com/curio-research/keystone/game/proto/output/pb.base"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Player discard cards
type C2S_DiscardCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardIds         []int64                  `protobuf:"varint,1,rep,packed,name=CardIds,proto3" json:"CardIds,omitempty"`
	IdentityPayload *pb_base.IdentityPayload `protobuf:"bytes,2,opt,name=IdentityPayload,proto3" json:"IdentityPayload,omitempty"`
}

func (x *C2S_DiscardCards) Reset() {
	*x = C2S_DiscardCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_DiscardCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_DiscardCards) ProtoMessage() {}

func (x *C2S_DiscardCards) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_DiscardCards.ProtoReflect.Descriptor instead.
func (*C2S_DiscardCards) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_DiscardCards) GetCardIds() []int64 {
	if x != nil {
		return x.CardIds
	}
	return nil
}

func (x *C2S_DiscardCards) GetIdentityPayload() *pb_base.IdentityPayload {
	if x != nil {
		return x.IdentityPayload
	}
	return nil
}

// Player ends self-turn
type C2S_TurnEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdentityPayload *pb_base.IdentityPayload `protobuf:"bytes,1,opt,name=IdentityPayload,proto3" json:"IdentityPayload,omitempty"`
}

func (x *C2S_TurnEnd) Reset() {
	*x = C2S_TurnEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C2S_TurnEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_TurnEnd) ProtoMessage() {}

func (x *C2S_TurnEnd) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_TurnEnd.ProtoReflect.Descriptor instead.
func (*C2S_TurnEnd) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{1}
}

func (x *C2S_TurnEnd) GetIdentityPayload() *pb_base.IdentityPayload {
	if x != nil {
		return x.IdentityPayload
	}
	return nil
}

// [non-blocking] Round Start
type S2C_RoundStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round *pb_base.Round `protobuf:"bytes,1,opt,name=Round,proto3" json:"Round,omitempty"`
}

func (x *S2C_RoundStart) Reset() {
	*x = S2C_RoundStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_RoundStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_RoundStart) ProtoMessage() {}

func (x *S2C_RoundStart) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_RoundStart.ProtoReflect.Descriptor instead.
func (*S2C_RoundStart) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{2}
}

func (x *S2C_RoundStart) GetRound() *pb_base.Round {
	if x != nil {
		return x.Round
	}
	return nil
}

// [non-blocking] Turn Start
type S2C_TurnStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Turn        *pb_base.Turn     `protobuf:"bytes,1,opt,name=Turn,proto3" json:"Turn,omitempty"`
	NewCardDeck *pb_base.CardDeck `protobuf:"bytes,2,opt,name=NewCardDeck,proto3" json:"NewCardDeck,omitempty"`
	NewPlayer   *pb_base.Player   `protobuf:"bytes,3,opt,name=NewPlayer,proto3" json:"NewPlayer,omitempty"`
}

func (x *S2C_TurnStart) Reset() {
	*x = S2C_TurnStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_TurnStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_TurnStart) ProtoMessage() {}

func (x *S2C_TurnStart) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_TurnStart.ProtoReflect.Descriptor instead.
func (*S2C_TurnStart) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{3}
}

func (x *S2C_TurnStart) GetTurn() *pb_base.Turn {
	if x != nil {
		return x.Turn
	}
	return nil
}

func (x *S2C_TurnStart) GetNewCardDeck() *pb_base.CardDeck {
	if x != nil {
		return x.NewCardDeck
	}
	return nil
}

func (x *S2C_TurnStart) GetNewPlayer() *pb_base.Player {
	if x != nil {
		return x.NewPlayer
	}
	return nil
}

// [non-blocking] Player get cards or system issue cards automatically
type S2C_ClaimCardsEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewCardDeck *pb_base.CardDeck `protobuf:"bytes,1,opt,name=NewCardDeck,proto3" json:"NewCardDeck,omitempty"`
}

func (x *S2C_ClaimCardsEnd) Reset() {
	*x = S2C_ClaimCardsEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_ClaimCardsEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_ClaimCardsEnd) ProtoMessage() {}

func (x *S2C_ClaimCardsEnd) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_ClaimCardsEnd.ProtoReflect.Descriptor instead.
func (*S2C_ClaimCardsEnd) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{4}
}

func (x *S2C_ClaimCardsEnd) GetNewCardDeck() *pb_base.CardDeck {
	if x != nil {
		return x.NewCardDeck
	}
	return nil
}

// [non-blocking] User get reward(after occupy tile or during round start)
type S2C_Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IssuedCards []*pb_base.Card   `protobuf:"bytes,1,rep,name=IssuedCards,proto3" json:"IssuedCards,omitempty"`
	IssuedGold  int32             `protobuf:"varint,2,opt,name=IssuedGold,proto3" json:"IssuedGold,omitempty"`
	NewCardDeck *pb_base.CardDeck `protobuf:"bytes,3,opt,name=NewCardDeck,proto3" json:"NewCardDeck,omitempty"`
	NewPlayer   *pb_base.Player   `protobuf:"bytes,4,opt,name=NewPlayer,proto3" json:"NewPlayer,omitempty"`
}

func (x *S2C_Reward) Reset() {
	*x = S2C_Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_round_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S2C_Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Reward) ProtoMessage() {}

func (x *S2C_Reward) ProtoReflect() protoreflect.Message {
	mi := &file_round_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Reward.ProtoReflect.Descriptor instead.
func (*S2C_Reward) Descriptor() ([]byte, []int) {
	return file_round_proto_rawDescGZIP(), []int{5}
}

func (x *S2C_Reward) GetIssuedCards() []*pb_base.Card {
	if x != nil {
		return x.IssuedCards
	}
	return nil
}

func (x *S2C_Reward) GetIssuedGold() int32 {
	if x != nil {
		return x.IssuedGold
	}
	return 0
}

func (x *S2C_Reward) GetNewCardDeck() *pb_base.CardDeck {
	if x != nil {
		return x.NewCardDeck
	}
	return nil
}

func (x *S2C_Reward) GetNewPlayer() *pb_base.Player {
	if x != nil {
		return x.NewPlayer
	}
	return nil
}

var File_round_proto protoreflect.FileDescriptor

var file_round_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x62, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x10, 0x43, 0x32, 0x53, 0x5f, 0x44, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x73, 0x12, 0x42, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x51, 0x0a, 0x0b, 0x43, 0x32, 0x53, 0x5f, 0x54, 0x75, 0x72,
	0x6e, 0x45, 0x6e, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x53, 0x32, 0x43, 0x5f,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x22, 0x96, 0x01, 0x0a, 0x0d, 0x53, 0x32, 0x43, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x54, 0x75, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x52,
	0x04, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x0b, 0x4e,
	0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x4e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x09,
	0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x11, 0x53, 0x32, 0x43,
	0x5f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x64, 0x12, 0x33,
	0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x0b, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x63, 0x6b, 0x22, 0xc1, 0x01, 0x0a, 0x0a, 0x53, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x12, 0x2f, 0x0a, 0x0b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x47, 0x6f, 0x6c,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x47,
	0x6f, 0x6c, 0x64, 0x12, 0x33, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65,
	0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x0b, 0x4e, 0x65, 0x77,
	0x43, 0x61, 0x72, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x2d, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x09, 0x4e, 0x65,
	0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x0a, 0x5a, 0x08, 0x70, 0x62, 0x2e, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_round_proto_rawDescOnce sync.Once
	file_round_proto_rawDescData = file_round_proto_rawDesc
)

func file_round_proto_rawDescGZIP() []byte {
	file_round_proto_rawDescOnce.Do(func() {
		file_round_proto_rawDescData = protoimpl.X.CompressGZIP(file_round_proto_rawDescData)
	})
	return file_round_proto_rawDescData
}

var file_round_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_round_proto_goTypes = []interface{}{
	(*C2S_DiscardCards)(nil),        // 0: pb_round.C2S_DiscardCards
	(*C2S_TurnEnd)(nil),             // 1: pb_round.C2S_TurnEnd
	(*S2C_RoundStart)(nil),          // 2: pb_round.S2C_RoundStart
	(*S2C_TurnStart)(nil),           // 3: pb_round.S2C_TurnStart
	(*S2C_ClaimCardsEnd)(nil),       // 4: pb_round.S2C_ClaimCardsEnd
	(*S2C_Reward)(nil),              // 5: pb_round.S2C_Reward
	(*pb_base.IdentityPayload)(nil), // 6: pb_base.IdentityPayload
	(*pb_base.Round)(nil),           // 7: pb_base.Round
	(*pb_base.Turn)(nil),            // 8: pb_base.Turn
	(*pb_base.CardDeck)(nil),        // 9: pb_base.CardDeck
	(*pb_base.Player)(nil),          // 10: pb_base.Player
	(*pb_base.Card)(nil),            // 11: pb_base.Card
}
var file_round_proto_depIdxs = []int32{
	6,  // 0: pb_round.C2S_DiscardCards.IdentityPayload:type_name -> pb_base.IdentityPayload
	6,  // 1: pb_round.C2S_TurnEnd.IdentityPayload:type_name -> pb_base.IdentityPayload
	7,  // 2: pb_round.S2C_RoundStart.Round:type_name -> pb_base.Round
	8,  // 3: pb_round.S2C_TurnStart.Turn:type_name -> pb_base.Turn
	9,  // 4: pb_round.S2C_TurnStart.NewCardDeck:type_name -> pb_base.CardDeck
	10, // 5: pb_round.S2C_TurnStart.NewPlayer:type_name -> pb_base.Player
	9,  // 6: pb_round.S2C_ClaimCardsEnd.NewCardDeck:type_name -> pb_base.CardDeck
	11, // 7: pb_round.S2C_Reward.IssuedCards:type_name -> pb_base.Card
	9,  // 8: pb_round.S2C_Reward.NewCardDeck:type_name -> pb_base.CardDeck
	10, // 9: pb_round.S2C_Reward.NewPlayer:type_name -> pb_base.Player
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_round_proto_init() }
func file_round_proto_init() {
	if File_round_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_round_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_DiscardCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_round_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C2S_TurnEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_round_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_RoundStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_round_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_TurnStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_round_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_ClaimCardsEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_round_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S2C_Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_round_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_round_proto_goTypes,
		DependencyIndexes: file_round_proto_depIdxs,
		MessageInfos:      file_round_proto_msgTypes,
	}.Build()
	File_round_proto = out.File
	file_round_proto_rawDesc = nil
	file_round_proto_goTypes = nil
	file_round_proto_depIdxs = nil
}
